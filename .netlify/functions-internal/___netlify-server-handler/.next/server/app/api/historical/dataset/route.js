(()=>{var a={};a.id=939,a.ids=[939],a.modules={261:a=>{"use strict";a.exports=require("next/dist/shared/lib/router/utils/app-paths")},1051:(a,b,c)=>{"use strict";c.r(b),c.d(b,{handler:()=>C,patchFetch:()=>B,routeModule:()=>x,serverHooks:()=>A,workAsyncStorage:()=>y,workUnitAsyncStorage:()=>z});var d={};c.r(d),c.d(d,{GET:()=>w});var e=c(96559),f=c(48088),g=c(37719),h=c(26191),i=c(81289),j=c(261),k=c(92603),l=c(39893),m=c(14823),n=c(47220),o=c(66946),p=c(47912),q=c(99786),r=c(46143),s=c(86439),t=c(43365),u=c(32190),v=c(1107);async function w(a){try{let b=new URL(a.url),c=Math.min(parseInt(b.searchParams.get("limit")||"100"),25e3),d=Math.max(parseInt(b.searchParams.get("page")||"1"),1),e=b.searchParams.get("address"),f=b.searchParams.get("startDate"),g=b.searchParams.get("endDate"),h="true"===b.searchParams.get("metadata");console.log(`üìö Historical dataset API: limit=${c}, page=${d}, address=${e}, metadata=${h}`);let i=new v.U,j=await i.loadDataset();if(!j)return u.NextResponse.json({error:"Historical dataset not available",message:"No 5-year historical dataset found. Please run full collection using POST /api/historical/complete-collection",endpoint:"/api/historical/complete-collection",timestamp:new Date().toISOString()},{status:404});if(h)return u.NextResponse.json({metadata:j.metadata,summary:{totalTransactions:j.metadata.totalTransactions,dateRange:{start:j.transactions[0]?.timeStamp?new Date(1e3*parseInt(j.transactions[0].timeStamp)).toISOString().split("T")[0]:"N/A",end:j.transactions[j.transactions.length-1]?.timeStamp?new Date(1e3*parseInt(j.transactions[j.transactions.length-1].timeStamp)).toISOString().split("T")[0]:"N/A"},addressBreakdown:j.metadata.addressCounts},timestamp:new Date().toISOString()});let k=[...j.transactions];if(e&&"all"!==e&&(k=k.filter(a=>a.to.toLowerCase()===e.toLowerCase())),f){let a=Math.floor(new Date(f).getTime()/1e3);k=k.filter(b=>parseInt(b.timeStamp)>=a)}if(g){let a=Math.floor(new Date(g).getTime()/1e3);k=k.filter(b=>parseInt(b.timeStamp)<=a)}let l=k.length,m=Math.ceil(l/c),n=(d-1)*c,o=k.slice(n,n+c);return u.NextResponse.json({transactions:o,pagination:{page:d,limit:c,totalTransactions:l,totalPages:m,hasNextPage:d<m,hasPreviousPage:d>1},filters:{address:e,startDate:f,endDate:g},metadata:{dataSource:"netlify-blobs-5year-dataset",collectionVersion:j.metadata.version,startBlock:j.metadata.startBlock,endBlock:j.metadata.endBlock,lastSync:j.metadata.lastFullSync,totalDatasizeTransactions:j.metadata.totalTransactions,addressCounts:j.metadata.addressCounts},summary:{years_of_data:j.transactions.length>1?Math.round((parseInt(j.transactions[j.transactions.length-1]?.timeStamp||"0")-parseInt(j.transactions[0]?.timeStamp||"0"))/0x1e187e0*10)/10:0,earliest_burn:j.transactions[0]?.timeStamp?new Date(1e3*parseInt(j.transactions[0].timeStamp)).toISOString().split("T")[0]:"N/A",latest_burn:j.transactions[j.transactions.length-1]?.timeStamp?new Date(1e3*parseInt(j.transactions[j.transactions.length-1].timeStamp)).toISOString().split("T")[0]:"N/A"},timestamp:new Date().toISOString()})}catch(b){console.error("‚ùå Historical dataset API error:",b);let a=b instanceof Error?b.message:"Unknown error";return u.NextResponse.json({error:"Failed to load historical dataset",message:a,timestamp:new Date().toISOString()},{status:500})}}let x=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/historical/dataset/route",pathname:"/api/historical/dataset",filename:"route",bundlePath:"app/api/historical/dataset/route"},distDir:".next",projectDir:"",resolvedPagePath:"/Users/alanphillips/Downloads/shibmetrics/app/api/historical/dataset/route.ts",nextConfigOutput:"standalone",userland:d}),{workAsyncStorage:y,workUnitAsyncStorage:z,serverHooks:A}=x;function B(){return(0,g.patchFetch)({workAsyncStorage:y,workUnitAsyncStorage:z})}async function C(a,b,c){var d;let e="/api/historical/dataset/route";"/index"===e&&(e="/");let g=await x.prepare(a,b,{srcPage:e,multiZoneDraftMode:"false"});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:w,isDraftMode:y,prerenderManifest:z,routerServerContext:A,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,resolvedPathname:D}=g,E=(0,j.normalizeAppPath)(e),F=!!(z.dynamicRoutes[E]||z.routes[D]);if(F&&!y){let a=!!z.routes[D],b=z.dynamicRoutes[E];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let G=null;!F||x.isDev||y||(G="/index"===(G=D)?"/":G);let H=!0===x.isDev||!F,I=F&&!H,J=a.method||"GET",K=(0,i.getTracer)(),L=K.getActiveScopeSpan(),M={params:v,prerenderManifest:z,renderOpts:{experimental:{dynamicIO:!!w.experimental.dynamicIO,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:H,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=w.experimental)?void 0:d.cacheLife,isRevalidate:I,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>x.onRequestError(a,b,d,A)},sharedContext:{buildId:u}},N=new k.NodeNextRequest(a),O=new k.NodeNextResponse(b),P=l.NextRequestAdapter.fromNodeNextRequest(N,(0,l.signalFromNodeResponse)(b));try{let d=async c=>x.handle(P,M).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=K.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${J} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${J} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&B&&C&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=M.renderOpts.fetchMetrics;let i=M.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=M.renderOpts.collectedTags;if(!F)return await (0,o.I)(N,O,e,M.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,d=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await x.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})},A),b}},l=await x.handleResponse({req:a,nextConfig:w,cacheKey:G,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:z,isRoutePPREnabled:!1,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,responseGenerator:k,waitUntil:c.waitUntil});if(!F)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",B?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),y&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&F||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(N,O,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};L?await g(L):await K.withPropagatedContext(a.headers,()=>K.trace(m.BaseServerSpan.handleRequest,{spanName:`${J} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":J,"http.target":a.url}},g))}catch(b){if(L||await x.onRequestError(a,b,{routerKind:"App Router",routePath:E,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})}),F)throw b;return await (0,o.I)(N,O,new Response(null,{status:500})),null}}},1107:(a,b,c)=>{"use strict";c.d(b,{I:()=>g,U:()=>f});var d=c(75823);let e=[{address:"0xdead000000000000000042069420694206942069",name:"BA-1 (Main Burn Address)",startBlock:0xa14535},{address:"0x000000000000000000000000000000000000dead",name:"BA-2 (Alternate Dead Address)",startBlock:0xa14535},{address:"0x0000000000000000000000000000000000000000",name:"BA-3 (Null Address)",startBlock:0xa14535},{address:"0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce",name:"Community Address (Vitalik donations)",startBlock:0xa14535}];class f{constructor(){this.store=(0,d.KA)("shibmetrics-historical")}async saveDataset(a){console.log(`üíæ Saving ${a.transactions.length} transactions to Netlify Blobs...`);try{await this.store.setJSON("complete-dataset",a,{metadata:{version:a.metadata.version,totalTransactions:a.metadata.totalTransactions,lastSync:a.metadata.lastFullSync,dataIntegrityHash:this.calculateDataHash(a.transactions)}}),console.log("‚úÖ Historical dataset saved to Netlify Blobs")}catch(a){throw console.error("‚ùå Failed to save dataset to Netlify Blobs:",a),a}}async loadDataset(){try{let a=await this.store.get("complete-dataset",{type:"json"});if(!a)return console.log("\uD83D\uDCDA No historical dataset found in Netlify Blobs"),null;return console.log(`üìö Loaded ${a.transactions?.length||0} transactions from Netlify Blobs`),a}catch(a){return console.error("‚ùå Failed to load dataset from Netlify Blobs:",a),null}}async saveProgress(a){try{await this.store.setJSON("collection-progress",a),console.log(`üìä Progress saved: Block ${a.currentBlock}/${a.targetBlock}`)}catch(a){console.error("‚ùå Failed to save progress:",a)}}async loadProgress(){try{return await this.store.get("collection-progress",{type:"json"})||null}catch(a){return console.error("‚ùå Failed to load progress:",a),null}}calculateDataHash(a){let b=a.map(a=>`${a.hash}-${a.value}`).join(""),c=0;for(let a=0;a<b.length;a++)c=(c<<5)-c+b.charCodeAt(a),c&=c;return c.toString(16)}}class g{constructor(a){this.storage=new f,this.apiKey=a}async getCurrentBlock(){try{let a=await fetch(`https://api.etherscan.io/api?module=proxy&action=eth_blockNumber&apikey=${this.apiKey}`),b=await a.json();return parseInt(b.result,16)}catch(a){return console.error("‚ùå Failed to get current block:",a),215e5}}async collectHistoricalTransactions(a=1e3){console.log("\uD83D\uDE80 Starting comprehensive 5-year historical collection...");let b=await this.storage.loadDataset()||this.createEmptyDataset(),c=await this.storage.loadProgress()||this.createInitialProgress(),d=await this.getCurrentBlock();c.targetBlock=d,console.log(`üìä Collection scope: Block 10569013 to ${d} (${d-0xa14535} blocks)`);try{for(let f of e){console.log(`
üîç Collecting from ${f.name}...`);let e=await this.collectFromAddress(f.address,f.startBlock,d,c,a),g=new Set(b.transactions.map(a=>a.hash)),h=e.filter(a=>!g.has(a.hash));b.transactions.push(...h),console.log(`‚úÖ ${f.name}: Added ${h.length} new transactions (${e.length} total found)`),c.addressProgress[f.address]=e.length,c.totalTransactions=b.transactions.length,await this.storage.saveProgress(c)}return b.transactions.sort((a,b)=>parseInt(a.timeStamp)-parseInt(b.timeStamp)),b.metadata={version:"2.0.0",startBlock:0xa14535,endBlock:d,totalTransactions:b.transactions.length,lastFullSync:new Date().toISOString(),addressCounts:this.calculateAddressCounts(b.transactions),collectionProgress:c},await this.storage.saveDataset(b),console.log(`
üéâ Historical collection complete!`),console.log(`üìä Total transactions: ${b.transactions.length}`),console.log(`üìÖ Date range: ${new Date(1e3*parseInt(b.transactions[0]?.timeStamp)).toISOString().split("T")[0]} to ${new Date(1e3*parseInt(b.transactions[b.transactions.length-1]?.timeStamp)).toISOString().split("T")[0]}`),b}catch(a){throw console.error("‚ùå Historical collection failed:",a),await this.storage.saveProgress(c),a}}async collectFromAddress(a,b,c,d,e){let f=[],g=1,h=!0;for(;h;)try{await this.delay(200);let i=`https://api.etherscan.io/api?module=account&action=tokentx&contractaddress=0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce&address=${a}&startblock=${b}&endblock=${c}&page=${g}&offset=${e}&sort=asc&apikey=${this.apiKey}`;console.log(`üì° Fetching page ${g} for ${a.slice(0,10)}...`);let j=await fetch(i),k=await j.json();if("1"!==k.status||!k.result||0===k.result.length){h=!1;break}let l=k.result.filter(b=>b.to.toLowerCase()===a.toLowerCase()&&"SHIB"===b.tokenSymbol);f.push(...l.map(a=>({hash:a.hash,from:a.from,to:a.to,value:a.value,timeStamp:a.timeStamp,blockNumber:a.blockNumber,tokenName:a.tokenName||"SHIBA INU",tokenSymbol:a.tokenSymbol||"SHIB",tokenDecimal:a.tokenDecimal||"18",gasUsed:a.gasUsed,gasPrice:a.gasPrice}))),d.currentBlock=Math.max(d.currentBlock,parseInt(k.result[k.result.length-1]?.blockNumber||b)),console.log(`üìä Page ${g}: Found ${l.length} burns (Block ${d.currentBlock})`),k.result.length<e?h=!1:g++,f.length%5e3==0&&(console.log(`üíæ Periodic save: ${f.length} transactions collected...`),await this.storage.saveProgress(d))}catch(b){if(console.error(`‚ùå Error fetching page ${g} for ${a}:`,b),await this.delay(1e3),1===g)continue;break}return f}createEmptyDataset(){return{metadata:{version:"2.0.0",startBlock:0xa14535,endBlock:0xa14535,totalTransactions:0,lastFullSync:new Date().toISOString(),addressCounts:{},collectionProgress:this.createInitialProgress()},transactions:[]}}createInitialProgress(){return{currentBlock:0xa14535,targetBlock:0xa14535,addressProgress:{},totalTransactions:0,lastCollection:new Date().toISOString(),isComplete:!1}}calculateAddressCounts(a){let b={};return a.forEach(a=>{b[a.to]=(b[a.to]||0)+1}),b}delay(a){return new Promise(b=>setTimeout(b,a))}async updateWithNewTransactions(){console.log("\uD83D\uDD04 Updating historical dataset with new transactions...");let a=await this.storage.loadDataset();if(!a)return console.log("‚ö†Ô∏è No existing dataset found. Run full collection first."),null;let b=await this.getCurrentBlock(),c=a.metadata.endBlock;if(b<=c)return console.log("‚úÖ Dataset is already up to date"),a;console.log(`üìä Updating from block ${c} to ${b}`);let d=0;for(let f of e){let e=await this.collectFromAddress(f.address,c+1,b,a.metadata.collectionProgress,1e3),g=new Set(a.transactions.map(a=>a.hash)),h=e.filter(a=>!g.has(a.hash));a.transactions.push(...h),d+=h.length}return a.transactions.sort((a,b)=>parseInt(a.timeStamp)-parseInt(b.timeStamp)),a.metadata.endBlock=b,a.metadata.totalTransactions=a.transactions.length,a.metadata.lastFullSync=new Date().toISOString(),a.metadata.addressCounts=this.calculateAddressCounts(a.transactions),await this.storage.saveDataset(a),console.log(`‚úÖ Update complete: Added ${d} new transactions`),console.log(`üìä Total transactions: ${a.transactions.length}`),a}}},3295:a=>{"use strict";a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},19771:a=>{"use strict";a.exports=require("process")},29294:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},86439:a=>{"use strict";a.exports=require("next/dist/shared/lib/no-fallback-error.external")},96487:()=>{}};var b=require("../../../../webpack-runtime.js");b.C(a);var c=b.X(0,[431,55,823],()=>b(b.s=1051));module.exports=c})();